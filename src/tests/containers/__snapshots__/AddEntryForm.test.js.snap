// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add Entry Form UI render features container should render as expected 1`] = `
<_default>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          Object {
            "key": "testKey",
          },
        ]
      }
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/",
                "search": "",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Connect(AddEntryForm)>
          <AddEntryForm
            clearEntryError={[Function]}
            createEntry={[Function]}
            errorMessage=""
            getSingleEntry={[Function]}
            updateEntry={[Function]}
          >
            <main>
              <section>
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="heading"
                  >
                    Add an Entry
                  </div>
                  <div
                    className="entryError"
                  />
                  <input
                    id="title"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Title"
                    type="text"
                    value=""
                  />
                  <div
                    className="entryError"
                  />
                  <textarea
                    cols="50"
                    id="content"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Content"
                    rows="20"
                    value=""
                  />
                  <div
                    className="entryError"
                  />
                  <button
                    type="submit"
                  >
                    Save
                  </button>
                  <button
                    onClick={[Function]}
                    type="button"
                  >
                    Cancel
                  </button>
                </form>
              </section>
            </main>
          </AddEntryForm>
        </Connect(AddEntryForm)>
      </Router>
    </MemoryRouter>
  </Provider>
</_default>
`;

exports[`Add Entry Form UI render features container should render as expected when in update mode 1`] = `
<_default>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          Object {
            "key": "testKey",
          },
        ]
      }
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/",
                "search": "",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Connect(AddEntryForm)
          match={
            Object {
              "params": Object {
                "id": 2,
              },
            }
          }
          type="update"
        >
          <AddEntryForm
            clearEntryError={[Function]}
            createEntry={[Function]}
            errorMessage=""
            getSingleEntry={[Function]}
            match={
              Object {
                "params": Object {
                  "id": 2,
                },
              }
            }
            type="update"
            updateEntry={[Function]}
          >
            <main>
              <section>
                <form
                  onSubmit={[Function]}
                >
                  <div
                    className="heading"
                  >
                    Update Entry
                  </div>
                  <div
                    className="entryError"
                  />
                  <input
                    id="title"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Title"
                    type="text"
                    value=""
                  />
                  <div
                    className="entryError"
                  />
                  <textarea
                    cols="50"
                    id="content"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Content"
                    rows="20"
                    value=""
                  />
                  <div
                    className="entryError"
                  />
                  <button
                    type="submit"
                  >
                    Save
                  </button>
                  <button
                    onClick={[Function]}
                    type="button"
                  >
                    Cancel
                  </button>
                </form>
              </section>
            </main>
          </AddEntryForm>
        </Connect(AddEntryForm)>
      </Router>
    </MemoryRouter>
  </Provider>
</_default>
`;
